name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install selene
        run: |
          set -e
          SELENE_VERSION=$(curl -s https://api.github.com/repos/Kampfkarren/selene/releases/latest | grep '"tag_name"' | cut -d '"' -f 4)
          echo "Installing selene version: ${SELENE_VERSION}"
          wget -O selene.zip https://github.com/Kampfkarren/selene/releases/download/${SELENE_VERSION}/selene-${SELENE_VERSION}-linux.zip
          unzip selene.zip
          chmod +x ./selene
          sudo mv ./selene /usr/local/bin/
          selene --version

      - name: Run selene
        run: selene lua/

      - name: Install stylua
        run: |
          set -e
          wget -O stylua.zip https://github.com/JohnnyMorganz/StyLua/releases/latest/download/stylua-linux-x86_64.zip
          unzip stylua.zip
          chmod +x ./stylua
          sudo mv ./stylua /usr/local/bin/
          stylua --version

      - name: Check formatting
        run: stylua --check lua/ colors/

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        neovim_version:
          - stable
          - nightly
    steps:
      - uses: actions/checkout@v4

      - name: Install Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: ${{ matrix.neovim_version }}

      - name: Run tests
        run: |
          nvim --version
          nvim --headless -u tests/init.lua +qa

      - name: Check theme loads
        run: |
          nvim --headless -c "set rtp+=$(pwd)" -c "colorscheme silkcircuit" -c "qa" || exit 1

  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install markdownlint
        run: npm install -g markdownlint-cli

      - name: Lint markdown files
        run: markdownlint '**/*.md' --ignore node_modules

      - name: Check for broken links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        continue-on-error: true
        id: link-check
        with:
          use-verbose-mode: 'yes'
          config-file: '.github/markdown-link-check.json'

      - name: Report link check results
        if: steps.link-check.outcome == 'failure'
        run: |
          echo "::warning::Broken links were found in markdown files. Please review the link check output above."
          echo "::warning::This is not blocking the CI, but should be fixed."

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4

      - name: Install Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: stable

      - name: Generate compiled theme
        run: |
          nvim --headless -u scripts/compile.lua +qa

      - name: Validate color palette
        run: |
          python3 scripts/validate_colors.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-theme
          path: |
            cache/silkcircuit_compiled.lua
            extras/
